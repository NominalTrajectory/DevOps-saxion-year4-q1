#   8 888888888o.      8 8888888888     d888888o.       ,o888888o.    8 888888888o.    8 8888 8 888888888o 8888888 8888888888  8 8888     ,o888888o.     b.             8
#   8 8888    `^888.   8 8888         .`8888:' `88.    8888     `88.  8 8888    `88.   8 8888 8 8888    `88.     8 8888        8 8888  . 8888     `88.   888o.          8
#   8 8888        `88. 8 8888         8.`8888.   Y8 ,8 8888       `8. 8 8888     `88   8 8888 8 8888     `88     8 8888        8 8888 ,8 8888       `8b  Y88888o.       8
#   8 8888         `88 8 8888         `8.`8888.     88 8888           8 8888     ,88   8 8888 8 8888     ,88     8 8888        8 8888 88 8888        `8b .`Y888888o.    8
#   8 8888          88 8 888888888888  `8.`8888.    88 8888           8 8888.   ,88'   8 8888 8 8888.   ,88'     8 8888        8 8888 88 8888         88 8o. `Y888888o. 8
#   8 8888          88 8 8888           `8.`8888.   88 8888           8 888888888P'    8 8888 8 888888888P'      8 8888        8 8888 88 8888         88 8`Y8o. `Y88888o8
#   8 8888         ,88 8 8888            `8.`8888.  88 8888           8 8888`8b        8 8888 8 8888             8 8888        8 8888 88 8888        ,8P 8   `Y8o. `Y8888
#   8 8888        ,88' 8 8888        8b   `8.`8888. `8 8888       .8' 8 8888 `8b.      8 8888 8 8888             8 8888        8 8888 `8 8888       ,8P  8      `Y8o. `Y8
#   8 8888    ,o88P'   8 8888        `8b.  ;8.`8888    8888     ,88'  8 8888   `8b.    8 8888 8 8888             8 8888        8 8888  ` 8888     ,88'   8         `Y8o.`
#   8 888888888P'      8 888888888888 `Y8888P ,88P'     `8888888P'    8 8888     `88.  8 8888 8 8888             8 8888        8 8888     `8888888P'     8            `Yo
Description: This is Stack 01 of Cloud Engineering\Cloud Automation Concepts\Assassment 01 | This stack contains the base network configuration with an empty VPC, two Public subnets, two Private subnets in two different availability zones, Internet Gateway, NAT Instance, Route tables





#   8 888888888o      .8.          8 888888888o.            .8.                   ,8.       ,8.          8 8888888888 8888888 8888888888 8 8888888888   8 888888888o.     d888888o.
#   8 8888    `88.   .888.         8 8888    `88.          .888.                 ,888.     ,888.         8 8888             8 8888       8 8888         8 8888    `88.  .`8888:' `88.
#   8 8888     `88  :88888.        8 8888     `88         :88888.               .`8888.   .`8888.        8 8888             8 8888       8 8888         8 8888     `88  8.`8888.   Y8
#   8 8888     ,88 . `88888.       8 8888     ,88        . `88888.             ,8.`8888. ,8.`8888.       8 8888             8 8888       8 8888         8 8888     ,88  `8.`8888.
#   8 8888.   ,88'.8. `88888.      8 8888.   ,88'       .8. `88888.           ,8'8.`8888,8^8.`8888.      8 888888888888     8 8888       8 888888888888 8 8888.   ,88'   `8.`8888.
#   8 888888888P'.8`8. `88888.     8 888888888P'       .8`8. `88888.         ,8' `8.`8888' `8.`8888.     8 8888             8 8888       8 8888         8 888888888P'     `8.`8888.
#   8 8888      .8' `8. `88888.    8 8888`8b          .8' `8. `88888.       ,8'   `8.`88'   `8.`8888.    8 8888             8 8888       8 8888         8 8888`8b          `8.`8888.
#   8 8888     .8'   `8. `88888.   8 8888 `8b.       .8'   `8. `88888.     ,8'     `8.`'     `8.`8888.   8 8888             8 8888       8 8888         8 8888 `8b.    8b   `8.`8888.
#   8 8888    .888888888. `88888.  8 8888   `8b.    .888888888. `88888.   ,8'       `8        `8.`8888.  8 8888             8 8888       8 8888         8 8888   `8b.  `8b.  ;8.`8888
#   8 8888   .8'       `8. `88888. 8 8888     `88. .8'       `8. `88888. ,8'         `         `8.`8888. 8 888888888888     8 8888       8 888888888888 8 8888     `88. `Y8888P ,88P'
Parameters:
  # The IP address range to be used for this VPC
  VPCCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC.
    Type: String
    Default: 10.0.0.0/16
  
  # The IP address range to be used for the Public Subnet 1
  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the first public subnet
    Type: String
    Default: 10.0.1.0/24

  # The IP address range to be used for the Public Subnet 2
  PublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the second public subnet
    Type: String
    Default: 10.0.2.0/24

  # The IP address range to be used for the Private Subnet 1
  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the first private subnet
    Type: String
    Default: 10.0.51.0/24

  # The IP address range to be used for the Private Subnet 2
  PrivateSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the second private subnet
    Type: String
    Default: 10.0.52.0/24

  # The name of the first availability zone to be used. By default picks the first from the array of available zones
  AvailabilityZone1:
    Description: Please enter the name of the first Availability Zone
    Type: AWS::EC2::AvailabilityZone::Name
    
  # The name of the second availability zone to be used. By default picks the second from the array of available zones
  AvailabilityZone2:
    Description: Please enter the name of the second Availability Zone
    Type: AWS::EC2::AvailabilityZone::Name

#TODO: Add a condition to ensure usage of two different AZs
#Conditions:





#   8 888888888o.   8 8888888888     d888888o.       ,o888888o.     8 8888      88 8 888888888o.      ,o888888o.    8 8888888888     d888888o.
#   8 8888    `88.  8 8888         .`8888:' `88.  . 8888     `88.   8 8888      88 8 8888    `88.    8888     `88.  8 8888         .`8888:' `88.
#   8 8888     `88  8 8888         8.`8888.   Y8 ,8 8888       `8b  8 8888      88 8 8888     `88 ,8 8888       `8. 8 8888         8.`8888.   Y8
#   8 8888     ,88  8 8888         `8.`8888.     88 8888        `8b 8 8888      88 8 8888     ,88 88 8888           8 8888         `8.`8888.
#   8 8888.   ,88'  8 888888888888  `8.`8888.    88 8888         88 8 8888      88 8 8888.   ,88' 88 8888           8 888888888888  `8.`8888.
#   8 888888888P'   8 8888           `8.`8888.   88 8888         88 8 8888      88 8 888888888P'  88 8888           8 8888           `8.`8888.
#   8 8888`8b       8 8888            `8.`8888.  88 8888        ,8P 8 8888      88 8 8888`8b      88 8888           8 8888            `8.`8888.
#   8 8888 `8b.     8 8888        8b   `8.`8888. `8 8888       ,8P  ` 8888     ,8P 8 8888 `8b.    `8 8888       .8' 8 8888        8b   `8.`8888.
#   8 8888   `8b.   8 8888        `8b.  ;8.`8888  ` 8888     ,88'     8888   ,d8P  8 8888   `8b.     8888     ,88'  8 8888        `8b.  ;8.`8888
#   8 8888     `88. 8 888888888888 `Y8888P ,88P'     `8888888P'        `Y88888P'   8 8888     `88.    `8888888P'    8 888888888888 `Y8888P ,88P'
Resources:

  #DO = Dependent on
  #Par = Parameter

  #Description: This is the VPC, within this VPC the solution is build.
  CACAA1VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR                                             #Par: VPCCIDR                     (This is a IP range)
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags: 
        - Key: Name
          Value: CACAA1VPC





  #Description: This is the internet gateway, that is the portal to the internet for the solution and is connected to the public subnets via the route table.
  CACAA1InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CACAA1InternetGateway

  #Description: This is the VPCGatewayAttachment, that acts as an connection between the Internet gateway and the VPC allowing it to be used within the 
  #             VPC by things like route tables.
  CACAA1VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref CACAA1InternetGateway                       #DO: CACAA1InternetGateway        (The internet gateway)
      VpcId: !Ref CACAA1VPC                                               #DO: CACAA1VPC                    (The VPC)





  #Description: This is a subnet, it is the first of the four subnets and the first of the two public subnets This subnet is in the first of the two  
  #             availability zones that are used and instances within this subnet will by default get a public IP address.
  CACAA1SubnetPublic1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubnet1CIDR                                   #Par: PublicSubnet1CIDR           (This is a IP range)
      MapPublicIpOnLaunch: 'true'
      AvailabilityZone: !Ref AvailabilityZone1                            #Par: AvailabilityZone1           (This is a AvailabilityZone Name)
      VpcId: !Ref CACAA1VPC                                               #DO: CACAA1VPC                    (The VPC)
      Tags:
        - Key: Name
          Value: CACAA1SubnetPublic1

  #Description: This is a subnet, it is the second of the four subnets and the second of the two public subnets This subnet is in the second of the two  
  #             availability zones that are used and instances within this subnet will by default get a public IP address.
  CACAA1SubnetPublic2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubnet2CIDR                                   #Par: PublicSubnet2CIDR           (This is a IP range)
      MapPublicIpOnLaunch: 'true'
      AvailabilityZone: !Ref AvailabilityZone2                            #Par: AvailabilityZone2           (This is a AvailabilityZone Name)
      VpcId: !Ref CACAA1VPC                                               #DO: CACAA1VPC                    (The VPC)
      Tags:
        - Key: Name
          Value: CACAA1SubnetPublic2 

  #Description: This is a subnet, it is the third of the four subnets and the first of the two private subnets This subnet is in the first of the two  
  #             availability zones that are used and instances within this subnet will by default NOT get a public IP address.
  CACAA1SubnetPrivate1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubnet1CIDR                                  #Par: PrivateSubnet1CIDR          (This is a IP range)
      MapPublicIpOnLaunch: 'false'
      AvailabilityZone: !Ref AvailabilityZone1                            #Par: AvailabilityZone1           (This is a AvailabilityZone Name)
      VpcId: !Ref CACAA1VPC                                               #DO: CACAA1VPC                    (The VPC)
      Tags:
        - Key: Name
          Value: CACAA1SubnetPrivate1
  
  #Description: This is a subnet, it is the fourth of the four subnets and the second of the two private subnets This subnet is in the second of the two  
  #             availability zones that are used and instances within this subnet will by default NOT get a public IP address.
  CACAA1SubnetPrivate2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubnet2CIDR                                  #Par: PrivateSubnet2CIDR          (This is a IP range)
      MapPublicIpOnLaunch: 'false'
      AvailabilityZone: !Ref AvailabilityZone2                            #Par: AvailabilityZone2           (This is a AvailabilityZone Name)
      VpcId: !Ref CACAA1VPC                                               #DO: CACAA1VPC                    (The VPC)
      Tags:
        - Key: Name
          Value: CACAA1SubnetPrivate2





  #Description: This is a route table, it is the first of the two route tables, it is connected to the two public subnets via route table associations
  #             and to the internet gateway via the default route. Finally the route table also connects to the VPC itself by default.
  CACAA1PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref CACAA1VPC                                               #DO: CACAA1VPC                    (The VPC)
      Tags: 
        - Key: Name
          Value: CACAA1PublicRouteTable

  #Description: This is a route, it is part of the public route table, it connects to the internet gateway sending all traffic that is not meant for the VPC to there.
  CACAA1PublicDefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref CACAA1InternetGateway                               #DO: CACAA1InternetGateway        (The internet gateway)
      RouteTableId: !Ref CACAA1PublicRouteTable                           #DO: CACAA1PublicRouteTable       (The route table for public subnets)

  #Description: This is a SubnetRouteTableAssociation, it connects the first of the two public subnets to the public route table.
  CACAA1PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref CACAA1PublicRouteTable                           #DO: CACAA1PublicRouteTable       (The route table for public subnets)
      SubnetId: !Ref CACAA1SubnetPublic1                                  #DO: CACAA1SubnetPublic1          (The first public subnet)

  #Description: This is a SubnetRouteTableAssociation, it connects the second of the two public subnets to the public route table.
  CACAA1PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref CACAA1PublicRouteTable                           #DO: CACAA1PublicRouteTable       (The route table for public subnets)
      SubnetId: !Ref CACAA1SubnetPublic2                                  #DO: CACAA1SubnetPublic2          (The second public subnet)





  # NAT Instance instead of NAT Gateway because of the limitations of AWS Educate account
  # TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO
  #O TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TOD
  #DO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TO
  #ODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO T
  #TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO 
  CACAA1NATSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: This security group is dedicated to the NAT instance
      GroupName: NATSecurityGroup
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref PrivateSubnet1CIDR
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref PrivateSubnet1CIDR
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref PrivateSubnet1CIDR
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref PrivateSubnet2CIDR
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref PrivateSubnet2CIDR
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref PrivateSubnet2CIDR
      SecurityGroupEgress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags: 
        - Key: Name
          Value: CACAA1NATSecurityGroup
      VpcId: !Ref CACAA1VPC                                               #DO: CACAA1VPC                    (The VPC)

  # TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO
  #O TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TOD
  #DO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TO
  #ODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO T
  #TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO 
  CACAA1NATInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-01ef31f9f39c5aaed
      SubnetId: !Ref CACAA1SubnetPublic1
      SourceDestCheck: false
      KeyName: CAC_Assignments
      SecurityGroupIds: 
        - !Ref CACAA1NATSecurityGroup
      Tags:
        - Key: Name
          Value: CACAA1NATInstance




  #Description: This is a route table, it is the second of the two route tables, it is connected to the two private subnets via route table associations
  #             and to the nat gateway via the default route. Finally the route table also connects to the VPC itself by default.
  CACAA1NATPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CACAA1VPC                                               #DO: CACAA1VPC                    (The VPC)
      Tags:
        - Key: Name
          Value: CACAA1NATPrivateRouteTable

  #Description: This is a route, it is part of the public route table, it connects to the nat instance sending all traffic that is not meant for the VPC to there.
  # TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO
  #O TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TOD
  #DO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TO
  #ODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO T
  #TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO 
  CACAA1PrivateDefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId: !Ref CACAA1NATInstance
      RouteTableId: !Ref CACAA1NATPrivateRouteTable

  #Description: This is a SubnetRouteTableAssociation, it connects the first of the two private subnets to the private route table.
  CACAA1PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref CACAA1NATPrivateRouteTable                       #DO: CACAA1NATPrivateRouteTable   (The route table for private subnets)
      SubnetId: !Ref CACAA1SubnetPrivate1                                 #DO: CACAA1SubnetPrivate1         (The first private subnet)

  #Description: This is a SubnetRouteTableAssociation, it connects the second of the two private subnets to the private route table.
  CACAA1PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref CACAA1NATPrivateRouteTable                       #DO: CACAA1NATPrivateRouteTable   (The route table for private subnets)
      SubnetId: !Ref CACAA1SubnetPrivate2                                 #DO: CACAA1SubnetPrivate2         (The second private subnet)




                                                                                                              
#       ,o888888o.     8 8888      88 8888888 8888888888 8 888888888o   8 8888      88 8888888 8888888888 d888888o.   
#    . 8888     `88.   8 8888      88       8 8888       8 8888    `88. 8 8888      88       8 8888     .`8888:' `88. 
#   ,8 8888       `8b  8 8888      88       8 8888       8 8888     `88 8 8888      88       8 8888     8.`8888.   Y8 
#   88 8888        `8b 8 8888      88       8 8888       8 8888     ,88 8 8888      88       8 8888     `8.`8888.     
#   88 8888         88 8 8888      88       8 8888       8 8888.   ,88' 8 8888      88       8 8888      `8.`8888.    
#   88 8888         88 8 8888      88       8 8888       8 888888888P'  8 8888      88       8 8888       `8.`8888.   
#   88 8888        ,8P 8 8888      88       8 8888       8 8888         8 8888      88       8 8888        `8.`8888.  
#   `8 8888       ,8P  ` 8888     ,8P       8 8888       8 8888         ` 8888     ,8P       8 8888    8b   `8.`8888. 
#    ` 8888     ,88'     8888   ,d8P        8 8888       8 8888           8888   ,d8P        8 8888    `8b.  ;8.`8888 
#       `8888888P'        `Y88888P'         8 8888       8 8888            `Y88888P'         8 8888     `Y8888P ,88P' 
Outputs:

  VPCRef:
    Description: Reference to the VPC
    Value: !Ref CACAA1VPC
    Export:
      Name: BaseStack:VPC

  InternetGatewayRef:
    Description: Reference to the Internet Gateway
    Value: !Ref CACAA1InternetGateway
    Export:
      Name: BaseStack:InternetGateway
    
  VPCGatewayAttachmentRef:
    Description: Reference to the VPC gateway attachment
    Value: !Ref CACAA1VPCGatewayAttachment
    Export:
      Name: BaseStack:CACAA1VPCGatewayAttachment

  PublicSubnet1Ref:
    Description: Reference to the first public subnet
    Value: !Ref CACAA1SubnetPublic1
    Export:
      Name: BaseStack:PublicSubnet1

  PublicSubnet2Ref:
    Description: Reference to the first public subnet
    Value: !Ref CACAA1SubnetPublic2
    Export:
      Name: BaseStack:PublicSubnet2

  PrivateSubnet1Ref:
    Description: Reference to the first private subnet
    Value: !Ref CACAA1SubnetPrivate1
    Export:
      Name: BaseStack:PrivateSubnet1

  PrivateSubnet2Ref:
    Description: Reference to the first private subnet
    Value: !Ref CACAA1SubnetPrivate2
    Export:
      Name: BaseStack:PrivateSubnet2

  # AvailabilityZone1Ref:
  #   Description: Reference to Availability Zone 1
  #   Value: !Ref AvailabilityZone1
  #   Export:
  #     Name: BaseStack:AvailabilityZone1

  # AvailabilityZone2Ref:
  #   Description: Reference to Availability Zone 2
  #   Value: !Ref AvailabilityZone2
  #   Export:
  #     Name: BaseStack:AvailabilityZone2

  PublicRouteTableRef: 
    Description: Reference to the public route table
    Value: !Ref CACAA1PublicRouteTable
    Export:
      Name: BaseStack:PublicRouteTable

  NATInstanceRef:
    Description: Reference to the NAT Instance
    Value: !Ref CACAA1NATInstance
    Export:
      Name: BaseStack:NATInstance

  NATSecurityGroupRef:
    Description: Reference to the NAT SecurityGroup
    Value: !Ref CACAA1NATSecurityGroup
    Export:
      Name: BaseStack:NATSecurityGroup


