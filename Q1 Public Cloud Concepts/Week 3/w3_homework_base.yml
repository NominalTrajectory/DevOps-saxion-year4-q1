# Week 3. Homework assignment.
# Configure a webserver EC2 instance and download the website files from the S3 bucket.

Description: Base stack with a webserver EC2 instance and downloaded the website files from the S3 bucket.

Parameters:
  VPCCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC.
    Type: String
    Default: 10.0.0.0/16
  PublicSubnetCIDR:
    Description: Please enter the IP range (CIDR notation) for the first public subnet
    Type: String
    Default: 10.0.1.0/24
  S3BucketWebsiteFilesPath:
    Description: Please enter the address of an S3 bucket to website files 
    Type: String
    Default: e.g. s3://saxion-nl-mysite/website.zip

# The cloud resources your template is going to create.
Resources:

  W3HVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      Tags:
        - Key: Name
          Value: W3HVPC

  W3HInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: W3HInternetGateway

  W3HIGAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref W3HInternetGateway
      VpcId: !Ref W3HVPC          

  W3HPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubnetCIDR
      MapPublicIpOnLaunch: 'true'
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      VpcId: !Ref W3HVPC
      Tags:
        - Key: Name
          Value: W3HPublicSubnet

  W3HSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: This security groups allows incoming connection to ports 80 and 22
      GroupName: W3HSecurityGroup
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags: 
        - Key: Name
          Value: W3HSecurityGroup
      VpcId: !Ref W3HVPC

  W3HPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: W3HPublicRouteTable
      VpcId: !Ref W3HVPC
  # Define a default route to internet gateway
  W3HDefaultPublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref W3HInternetGateway
      RouteTableId: !Ref W3HPublicRouteTable

  # Define a subnet-routetable association
  W3HPublicSubnetRoutetableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref W3HPublicRouteTable
      SubnetId: !Ref W3HPublicSubnet

  W3HInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: W3HInstanceProfile
      Roles: 
        - 'EC2AllPermS3'

  W3HWebserver1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-00514a528eadbc95b
      SubnetId: !Ref W3HPublicSubnet
      KeyName: PCC_Assignments
      SecurityGroupIds:
        - !Ref W3HSecurityGroup
      IamInstanceProfile: !Ref W3HInstanceProfile
      UserData: 
        Fn::Base64:
         !Sub |
          #!/bin/bash
          yum -y update
          yum -y install httpd php php-mysql php-pdo php-ldap
          cd /var/www/html
          aws s3 cp ${S3BucketWebsiteFilesPath} .
          unzip website.zip
          service httpd start
 
      Tags:
        - Key: Name
          Value: W3HWebserver1
